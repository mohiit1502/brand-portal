// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login Type CTA FAQ Tests renders unauthorised 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(LoginTypeCta)
        action="login"
        history={
          Object {
            "action": "POP",
            "length": 18,
            "location": Object {
              "hash": "",
              "pathname": "/login",
              "search": "?unauthorized",
            },
          }
        }
        location={
          Object {
            "hash": "",
            "pathname": "/login",
            "search": "?unauthorized",
          }
        }
        match={
          Object {
            "isExact": true,
            "params": Object {},
            "path": "/login",
            "url": "/login",
          }
        }
        route={
          Object {
            "exact": true,
            "path": "/login",
          }
        }
      >
        <LoginTypeCta
          dispatchLoginAction={[Function]}
          dispatchRegisterAction={[Function]}
          history={
            Object {
              "action": "POP",
              "length": 18,
              "location": Object {
                "hash": "",
                "pathname": "/login",
                "search": "?unauthorized",
              },
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/login",
              "search": "?unauthorized",
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/login",
              "url": "/login",
            }
          }
          route={
            Object {
              "exact": true,
              "path": "/login",
            }
          }
        >
          <div
            className="c-LoginTypeCta"
          >
            <div
              className="page-container css-0 d-flex flex-column"
            >
              <div
                className="logoBox"
              >
                <img
                  alt="WBP Dark Logo"
                  className="logo"
                  src="BP_Logo_darkBG.svg"
                />
              </div>
              <div
                className="main-container position-absolute"
              >
                <div
                  className="content-container loader"
                >
                  <div
                    className="padder p-4"
                  >
                    <div
                      className="tab-content text-center"
                    >
                      <span
                        className="page-header mb-2"
                      >
                        <span />
                      </span>
                      <p
                        className="sub-title mb-0"
                      >
                        Streamline 
                        registration
                         by using one of your existing
                      </p>
                      <p
                        className="sub-title"
                      >
                        Walmart accounts.
                      </p>
                      <a
                        className="app-btn d-block mt-2"
                        href="/api/falcon/login?clientType=seller"
                        onClick={[Function]}
                      />
                      <div
                        className="OrSeparator w-100 d-flex my-4"
                      >
                        <hr />
                        <span>
                          OR
                        </span>
                        <hr />
                      </div>
                      <a
                        className="app-btn d-block secondary-btn mt-2"
                        href="/api/falcon/register?clientType=supplier"
                        onClick={[Function]}
                      />
                    </div>
                  </div>
                </div>
                <div>
                  <div
                    className="footnote-container mt-4"
                  >
                    <span
                      className="footnote d-block text-center"
                    >
                      We recommend setting your monitor resolution to at least 1024 x 768
                    </span>
                    <span
                      className="footnote d-block text-center"
                    >
                      U.S. Users: Please use Chrome v49 or newer
                    </span>
                    <span
                      className="footnote d-block text-center"
                    >
                      International Users: Please use Internet Explorer
                    </span>
                    <a
                      className="footnote d-block text-center policy-link"
                      href="https://corporate.walmart.com/privacy-security"
                      target="_blank"
                    >
                      Privacy Policy
                    </a>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </LoginTypeCta>
      </Connect(LoginTypeCta)>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`Login Type CTA FAQ Tests renders without error 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(LoginTypeCta)
        history={
          Object {
            "action": "PUSH",
            "length": 17,
            "location": Object {
              "hash": "",
              "key": "3r32hc",
              "pathname": "/login",
              "search": "",
            },
          }
        }
        location={
          Object {
            "hash": "",
            "key": "3r32hc",
            "pathname": "/login",
            "search": "",
          }
        }
        match={
          Object {
            "isExact": true,
            "params": Object {},
            "path": "/login",
            "url": "/login",
          }
        }
        route={
          Object {
            "exact": true,
            "path": "/login",
          }
        }
      >
        <LoginTypeCta
          action="login"
          dispatchLoginAction={[Function]}
          dispatchRegisterAction={[Function]}
          history={
            Object {
              "action": "PUSH",
              "length": 17,
              "location": Object {
                "hash": "",
                "key": "3r32hc",
                "pathname": "/login",
                "search": "",
              },
            }
          }
          location={
            Object {
              "hash": "",
              "key": "3r32hc",
              "pathname": "/login",
              "search": "",
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/login",
              "url": "/login",
            }
          }
          route={
            Object {
              "exact": true,
              "path": "/login",
            }
          }
        >
          <div
            className="c-LoginTypeCta"
          >
            <div
              className="page-container css-0 d-flex flex-column"
            >
              <div
                className="logoBox"
              >
                <img
                  alt="WBP Dark Logo"
                  className="logo"
                  src="BP_Logo_darkBG.svg"
                />
              </div>
              <div
                className="main-container position-absolute"
              >
                <div
                  className="content-container loader"
                >
                  <div
                    className="padder p-4"
                  >
                    <div
                      className="tab-content text-center"
                    >
                      <span
                        className="page-header mb-2"
                      >
                        <span>
                          Log In
                        </span>
                      </span>
                      <p
                        className="sub-title mb-0"
                      >
                        Streamline 
                        login
                         by using one of your existing
                      </p>
                      <p
                        className="sub-title"
                      >
                        Walmart accounts.
                      </p>
                      <a
                        className="app-btn d-block mt-2"
                        href="/api/falcon/login?clientType=seller"
                        onClick={[Function]}
                      >
                        Use Seller Center Account
                      </a>
                      <div
                        className="OrSeparator w-100 d-flex my-4"
                      >
                        <hr />
                        <span>
                          OR
                        </span>
                        <hr />
                      </div>
                      <a
                        className="app-btn d-block secondary-btn mt-2"
                        href="/api/falcon/login?clientType=supplier"
                        onClick={[Function]}
                      >
                        Continue with Brand Portal Log In
                      </a>
                    </div>
                  </div>
                </div>
                <div>
                  <div
                    className="footnote-container mt-4"
                  >
                    <span
                      className="footnote d-block text-center"
                    >
                      We recommend setting your monitor resolution to at least 1024 x 768
                    </span>
                    <span
                      className="footnote d-block text-center"
                    >
                      U.S. Users: Please use Chrome v49 or newer
                    </span>
                    <span
                      className="footnote d-block text-center"
                    >
                      International Users: Please use Internet Explorer
                    </span>
                    <a
                      className="footnote d-block text-center policy-link"
                      href="https://corporate.walmart.com/privacy-security"
                      target="_blank"
                    >
                      Privacy Policy
                    </a>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </LoginTypeCta>
      </Connect(LoginTypeCta)>
    </Router>
  </BrowserRouter>
</Provider>
`;
